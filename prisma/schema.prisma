generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                             String                           @id @default(cuid())
  name                           String?
  email                          String?                          @unique
  emailVerified                  DateTime?
  image                          String?
  mobileNumber                   String?
  accounts                       Account[]
  posts                          Post[]
  sessions                       Session[]
  PlacementEventUserNotification PlacementEventUserNotification[]
  PlacementEventUserRegistration PlacementEventUserRegistration[]

  @@unique([id, name])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id     String @id @default(cuid())
  userId String
  title  String
  body   String
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PlacementEvent {
  id                             String                           @id @default(cuid())
  companyName                    String
  registrationDeadline           DateTime
  registratonLink                String
  testTime                       DateTime
  PlacementEventUserNotification PlacementEventUserNotification[]
  PlacementEventUserRegistration PlacementEventUserRegistration[]
}

model PlacementEventUserNotification {
  id             String         @id @default(cuid())
  userId         String
  eventId        String
  PlacementEvent PlacementEvent @relation(fields: [eventId], references: [id], onDelete: Cascade)
  User           User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
}

model PlacementEventUserRegistration {
  id             String         @id @default(cuid())
  userId         String
  eventId        String
  PlacementEvent PlacementEvent @relation(fields: [eventId], references: [id], onDelete: Cascade)
  User           User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
}
